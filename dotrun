#! /usr/bin/env python3

# Core packages
import argparse
import os
import pkg_resources

# Local packages
from canonicalwebteam.dotrun import cwd, DotRun, list_projects

# Parse arguments
parser = argparse.ArgumentParser(
    description="Upload assets from this directory"
)
parser.add_argument(
    "-v",
    "--version",
    action="store_true",
    help="Show the currently installed version of documentation-builder.",
)
parser.add_argument(
    "-C",
    "--directory",
    help="The directory in which to run commands",
)
parser.add_argument(
    "-e",
    "--env",
    action='append',
    help="Environment variables to use when running package.json commands",
)
parser.add_argument(
    "command", nargs="?", help="One of: list, serve, build, test, yarn"
)
args, extra_arguments = parser.parse_known_args()
cli_arguments = vars(args)

directory = cli_arguments['directory'] or os.getcwd()

# Read environment variables
env = {}

if cli_arguments['env']:
    for env_str in cli_arguments['env']:
        key, value = env_str.split('=')
        env[key] = value

# Process arguments
if cli_arguments["version"]:
    print(pkg_resources.get_distribution("canonicalwebteam.dotrun").version)
elif cli_arguments["command"] == "list":
    list_projects()
elif cli_arguments["command"] in ["serve", "build", "test"]:
    with cwd(directory):
        DotRun(env=env).yarn(cli_arguments["command"])
elif cli_arguments["command"] == "clean":
    with cwd(directory):
        DotRun(env=env).clean()
elif cli_arguments["command"] == "yarn":
    with cwd(directory):
        DotRun(env=env).yarn(" ".join(extra_arguments))
else:
    parser.print_help()
